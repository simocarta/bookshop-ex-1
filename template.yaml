AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  bookshop-ex-1

  Sample SAM Template for bookshop-ex-1

Globals:
  Function:
    Timeout: 3

Resources:
  BookShopDynamoDB:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: book_shop
      AttributeDefinitions: 
        - AttributeName: pk
          AttributeType: "S"
        - AttributeName: sk
          AttributeType: "S"
        - AttributeName: External_ID
          AttributeType: "S"
      KeySchema: 
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: GSI_1
          KeySchema:
            - AttributeName: sk
              KeyType: HASH
            - AttributeName: pk
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
        - IndexName: GSI_2
          KeySchema:
            - AttributeName: External_ID
              KeyType: HASH
            - AttributeName: sk
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
      ProvisionedThroughput: 
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
  
  DependenciesLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
        LayerName: dependencies-node-level
        Description: Dependencies for sam app
        ContentUri: dependencies/
        CompatibleRuntimes:
          - nodejs14.x
        LicenseInfo: 'MIT'
        RetentionPolicy: Retain
  
  DynamoNodeFunctionsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
        LayerName: dynamodb-queries
        Description: Script for queries of DynamoDB
        ContentUri: dynamo-layer/
        CompatibleRuntimes:
          - nodejs14.x
        LicenseInfo: 'MIT'
        RetentionPolicy: Retain

  BookShopFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: book-shop/
      Handler: main.lambdaHandler
      Layers:
        - !Ref DependenciesLayer
        - !Ref DynamoNodeFunctionsLayer
      Runtime: nodejs14.x
      Architectures:
        - x86_64
      Environment:
        Variables:
          DB: !Ref BookShopDynamoDB
      Description: Book shop for exercice 1
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBCrudPolicy:
            TableName: !Ref BookShopDynamoDB
      Events:
        BookShop:
          Type: Api
          Properties:
            Path: /api/{cmd+}
            Method: get
  
  BookShopStreamFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: book-shop-stream/
      Handler: stream.lambdaHandler
      Layers:
        - !Ref DependenciesLayer
      Runtime: nodejs14.x
      Architectures:
        - x86_64
      Description: Book shop stream for exercice 1
      Events:
        Stream:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt BookShopDynamoDB.StreamArn
            BatchSize: 10
            StartingPosition: TRIM_HORIZON

Outputs:
  BookShopApi:
    Description: "API Gateway endpoint URL for Prod stage for Book Shop function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/api/"
  BookShopFunction:
    Description: "Book Shop Lambda Function ARN"
    Value: !GetAtt BookShopFunction.Arn
  BookShopDynamoDB:
    Description: "ARN of DynamoDB (Aggiunto da me per prova)"
    Value: !GetAtt BookShopDynamoDB.Arn
  BookShopFunctionIamRole:
    Description: "Implicit IAM Role created for Book Shop function"
    Value: !GetAtt BookShopFunctionRole.Arn
